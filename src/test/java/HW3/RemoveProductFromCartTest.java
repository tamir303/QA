package HW3;

//Generated by Selenium IDE

import HW3.pages.HomePage;
import HW3.pages.ProductPage;
import HW3.pages.ShopPage;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.internal.TextListener;
import org.junit.runner.JUnitCore;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.logging.log4j.*;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class RemoveProductFromCartTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    private JavascriptExecutor js;
    private Logger logger;
    private HomePage homePage;
    private ShopPage shopPage;
    private ProductPage productPage;
    @Before
    public void setUp() throws IOException {
        System.setProperty("webdriver.chrome.driver", "C:\\Users\\97252\\Dropbox\\PC\\" + "\\Downloads\\chromedriver_win32\\chromedriver.exe");
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        logger = LogManager.getLogger(AddToCartButtonTest.class);
    }

    @After
    public void tearDown() {
        //driver.quit();
    }

    @Test
    public void RemoveProduct() throws InterruptedException {
        driver.manage().window().setSize(new Dimension(1052, 666));
        driver.get("https://atid.store/");
        HandelLogger("https://atid.store/", "Website");

        // Click on the "Shop" menu item
        WebElement shop = driver.findElement(By.cssSelector("#menu-item-45 > a"));
        shop.click();
        HandelLogger("https://atid.store/store/", "Store");

        // Click on a product to add it to the cart
        WebElement productContainer = driver.findElement(By.cssSelector(".products li:first-child a"));
        productContainer.click();
        HandelLogger("https://atid.store/product/anchor-bracelet/", "Product Add");

        // Add the product to the cart
        WebElement product = driver.findElement(By.cssSelector("button[name='add-to-cart']"));
        product.click();

        // View Cart
        driver.findElement(By.cssSelector("#main > div > div.woocommerce-notices-wrapper > div > a")).click();
        HandelLogger("https://atid.store/cart-2/", "Cart");

        // Verify that the product has been added to the cart
        List<WebElement> cart = driver.findElements(By.cssSelector(".cart_item"));
        if (cart.size() == 0) {
            Exception e = new InterruptedException("Product wasn't added to cart");
            logger.info(Testing.TestFail.toString(e.getLocalizedMessage()));
            throw new InterruptedException();
        }
        logger.info(Testing.TestSuccess.toString("") + " Product successfully added to cart");

        // Remove the product from the cart
        driver.findElement(By.cssSelector(".cart_item .product-remove a")).click();

        // Verify that the product has been removed from the cart
        WebElement messageElement = new WebDriverWait(driver, 10).
                until(ExpectedConditions.visibilityOfElementLocated
                        (By.xpath("//p[@class='cart-empty woocommerce-info']")));
        if (!messageElement.getText().contains("Your cart is currently empty")) {
            Exception e = new InterruptedException("Product wasn't removed from cart");
            logger.info(Testing.TestFail.toString(e.getLocalizedMessage()));
            throw new InterruptedException();
        }
        logger.info(Testing.TestSuccess.toString("") + " Product successfully removed to cart");

        logger.info("Test {%s} Completed Successfully".formatted(this.getClass().getCanonicalName()));
        js.executeScript("window.scrollTo(0,1500)");
    }

    private void HandelLogger(String expectedUrl, String checkType) throws InterruptedException {
        if (driver.getCurrentUrl().equals(expectedUrl))
            logger.info(Testing.TestSuccess.toString(checkType) + " Successfully accessed");
        else {
            InterruptedException e = new InterruptedException(" Failed to access");
            logger.info(Testing.TestFail.toString(checkType) + e.getLocalizedMessage());
            throw new InterruptedException();
        }
    }

    public static void main(String[] args) {
        JUnitCore junit = new JUnitCore();
        junit.addListener(new TextListener(System.out));
        org.junit.runner.Result result = junit.run(RemoveProductFromCartTest.class); // Replace "SampleTest" with the name of your class

        if (result.getFailureCount() > 0) {
            System.out.println("Test failed.");
            System.exit(1);
        } else {
            System.out.println("Test finished successfully.");
            System.exit(0);
        }
    }
}
